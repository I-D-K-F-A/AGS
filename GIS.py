import telebot
import pyowm
import csv
import time
from telebot import apihelper

apihelper.proxy = {
   'http':'current proxy'
}

owm = pyowm.OWM('token', language = "ru")

bot = telebot.TeleBot("token")


@bot.message_handler(content_types=['location'])

def send_ecco(message):
    global answer;
    global humidity;
    global temp;
    global wind;
    global windeg;
    global tdate;
    global pressure;
    global latitude;
    global longitude;
    global idd;
    global l;

    observation = owm.weather_at_coords(message.location.latitude, message.location.longitude)

    l = observation.get_location()
    w = observation.get_weather()
    humidity = w.get_humidity()
    temp = w.get_temperature('celsius')["temp"]
    wind = w.get_wind()["speed"]
    windeg = w.get_wind()["deg"]
    tdate = observation.get_reception_time(timeformat='iso')
    pressure = w.get_pressure()["press"] / 1.333
    latitude = str(message.location.latitude)
    longitude = str(message.location.longitude)

    answer = "–¢–µ–∫—É—â–∏–µ –º–µ—Ç–µ–æ—É—Å–ª–æ–≤–∏—è –≤ " + l.get_name() + "\n"
    answer += "–û–±–ª–∞—á–Ω–æ—Å—Ç—å: " + w.get_detailed_status() + "\n"
    answer += "–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å: "  + str(humidity) + "%" + "\n"
    answer += "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: " + str(temp) + "\n"
    answer += "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + str(wind) + " –º/—Å–µ–∫." + "\n"
    answer += "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞: " + str(windeg) + " –≥—Ä–∞–¥." + "\n"
    answer += "–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ: " + str(round(pressure, 2)) + " –º–º. —Ä—Ç. —Å—Ç–æ–ª–±–∞" + "\n"
    answer += "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è: " + str(tdate) + "\n"
    answer += "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞: " + str(round(message.location.latitude, 2)) + ' ; ' + str(round(message.location.longitude, 2))

    bot.send_message(message.from_user.id, '–û–ø–∏—à–∏—Ç–µ –∑–∞–ø–∞—Ö –∏ –µ–≥–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5. \n –ù–∞–ø—Ä–∏–º–µ—Ä: "–ó–∞–ø–∞—Ö –≥–∞–∑–∞, 3"');
    bot.register_next_step_handler(message, description)

def description(message):
    global descr;
    descr = message.text
    

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ.')
    time.sleep(3)
    bot.send_message(message.chat.id, answer)

    with open('log.csv', 'a', newline='', encoding='utf-8') as csvfile:
            datawriter = csv.writer(csvfile, delimiter='&', quotechar=' ', quoting=csv.QUOTE_MINIMAL)
            datawriter.writerow([str(tdate)]+[latitude]+[longitude]+[str(temp)]+[str(wind)]+[str(windeg)]+[str(humidity)]+[str(round(pressure, 2))]+[str(descr)])



@bot.message_handler(content_types=['text'])
def send_back(message):

    bot.send_message(message.chat.id, '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞, —Å–Ω—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.')
    time.sleep(1.5)
    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ üìé, –∑–∞—Ç–µ–º Location.')


bot.infinity_polling(True)
